/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { CreditRecord, CreditRecordInterface } from "../CreditRecord";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DepositReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "RecordCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "createCreditRecord",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getCreditRecords",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
        ],
        internalType: "struct CreditRecord.Record[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getRecordCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDeposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5033608052608051610a3061003e600039600081816101230152818161041701526104cd0152610a306000f3fe6080604052600436106100705760003560e01c80636f9fb98a1161004e5780636f9fb98a146100e85780637d882097146100fb5780638da5cb5b14610111578063b964d5441461015d57600080fd5b8063076005fd146100755780633ccfd60b1461008a578063582143081461009f575b600080fd5b6100886100833660046106b6565b61018a565b005b34801561009657600080fd5b5061008861040c565b3480156100ab57600080fd5b506100d56100ba366004610732565b6001600160a01b031660009081526020819052604090205490565b6040519081526020015b60405180910390f35b3480156100f457600080fd5b50476100d5565b34801561010757600080fd5b506100d560015481565b34801561011d57600080fd5b506101457f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100df565b34801561016957600080fd5b5061017d610178366004610732565b610584565b6040516100df9190610762565b600083116101df5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064015b60405180910390fd5b8061022c5760405162461bcd60e51b815260206004820152601b60248201527f4465736372697074696f6e2063616e6e6f7420626520656d707479000000000060448201526064016101d6565b82341461028f5760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7420616d6f756e74206d757374206d617463682074686520637260448201526a19591a5d08185b5bdd5b9d60aa1b60648201526084016101d6565b600080336001600160a01b03166001600160a01b03168152602001908152602001600020604051806080016040528085815260200184848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250938552505042602080850191909152336040909401939093525083546001818101865594825290829020835160049092020190815590820151919290919082019061034190826108d3565b506040820151816002015560608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505050346001600082825461038d9190610993565b909155505060405133907fece5a1588913b19a08854e210b6b3a62ca765f811922f686851572817e442371906103ca9086908690869042906109ba565b60405180910390a260405134815233907f9936746a4565f9766fa768f88f56a7487c78780ac179562773d1c75c5269537e9060200160405180910390a2505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104845760405162461bcd60e51b815260206004820152601760248201527f4f6e6c79206f776e65722063616e20776974686472617700000000000000000060448201526064016101d6565b47806104c95760405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b60448201526064016101d6565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168260405160006040518083038185875af1925050503d8060008114610536576040519150601f19603f3d011682016040523d82523d6000602084013e61053b565b606091505b50509050806105805760405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b60448201526064016101d6565b5050565b6001600160a01b038116600090815260208181526040808320805482518185028101850190935280835260609492939192909184015b828210156106ab5783829060005260206000209060040201604051806080016040529081600082015481526020016001820180546105f79061084a565b80601f01602080910402602001604051908101604052809291908181526020018280546106239061084a565b80156106705780601f1061064557610100808354040283529160200191610670565b820191906000526020600020905b81548152906001019060200180831161065357829003601f168201915b505050918352505060028201546020808301919091526003909201546001600160a01b031660409091015290825260019290920191016105ba565b505050509050919050565b6000806000604084860312156106cb57600080fd5b83359250602084013567ffffffffffffffff808211156106ea57600080fd5b818601915086601f8301126106fe57600080fd5b81358181111561070d57600080fd5b87602082850101111561071f57600080fd5b6020830194508093505050509250925092565b60006020828403121561074457600080fd5b81356001600160a01b038116811461075b57600080fd5b9392505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561082557603f198a8503018652825160808151865289820151818b880152805180838901528592505b808310156107d5578183018c015188840160a00152918b01916107b7565b60a092508583828a0101528a8401518b89015260609150818401519350610806828901856001600160a01b03169052565b988b0198601f01601f191696909601019450509187019160010161078a565b50919998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061085e57607f821691505b60208210810361087e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156108ce57600081815260208120601f850160051c810160208610156108ab5750805b601f850160051c820191505b818110156108ca578281556001016108b7565b5050505b505050565b815167ffffffffffffffff8111156108ed576108ed610834565b610901816108fb845461084a565b84610884565b602080601f831160018114610936576000841561091e5750858301515b600019600386901b1c1916600185901b1785556108ca565b600085815260208120601f198616915b8281101561096557888601518255948401946001909101908401610946565b50858210156109835787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156109b457634e487b7160e01b600052601160045260246000fd5b92915050565b848152606060208201528260608201528284608083013760006080848301015260006080601f19601f86011683010190508260408301529594505050505056fea2646970667358221220128d02171a49cd959c6bf7e19b00547f7c418f4eaca124858f9221331a2319cf64736f6c63430008140033";

type CreditRecordConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CreditRecordConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CreditRecord__factory extends ContractFactory {
  constructor(...args: CreditRecordConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CreditRecord & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CreditRecord__factory {
    return super.connect(runner) as CreditRecord__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CreditRecordInterface {
    return new Interface(_abi) as CreditRecordInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CreditRecord {
    return new Contract(address, _abi, runner) as unknown as CreditRecord;
  }
}
